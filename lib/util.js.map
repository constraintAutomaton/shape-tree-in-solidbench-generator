{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":";;;AAAa,QAAA,YAAY,GAAG,iDAAiD,CAAC;AACjE,QAAA,qBAAqB,GAAG,kCAAkC,CAAC;AAC3D,QAAA,SAAS,GAAG,mCAAmC,CAAC;AAChD,QAAA,oBAAoB,GAAG,eAAe,CAAC;AAiBpD,MAAa,mBAAoB,SAAQ,KAAK;IAC1C,YAAY,OAAe;QACvB,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;IACtC,CAAC;CACJ;AALD,kDAKC","sourcesContent":["export const RDF_TYPE_IRI = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\nexport const SHAPE_TREE_PREFIX_IRI = \"http://www.w3.org/ns/shapetrees#\";\nexport const SOLID_IRI = \"http://www.w3.org/ns/solid/terms#\";\nexport const SHAPE_TREE_FILE_NAME = \"shapetree.ttl\";\n\n/**\n * The path of the shape in a pod and the path of the content related to the shape it can be a file or a directory\n */\nexport interface ShapeContentPath {\n    shape: string,\n    content: string\n}\n\nexport interface Config {\n    pods_folder: string,\n    shape_folders?: string,\n    generate_shape: (path: string, shape_folder: string | undefined) => string | ShapeDontExistError,\n    generate_shape_trees: (shapes: Array<ShapeContentPath>, pod_path: string) => void\n}\n\nexport class ShapeDontExistError extends Error {\n    constructor(message: string) {\n        super(message);\n        this.name = \"ShapeDontExistError\";\n    }\n}\n"]}